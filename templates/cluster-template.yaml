---
apiVersion: cluster.x-k8s.io/v1alpha4
kind: Cluster
metadata:
  name: "${CLUSTER_NAME}"
spec:
  infrastructureRef:
    apiVersion: infrastructure.cluster.x-k8s.io/v1alpha4
    kind: HostedCluster
    name: "${CLUSTER_NAME}"
  controlPlaneRef:
    apiVersion: controlplane.cluster.x-k8s.io/v1alpha4
    kind: HostedControlPlane
    name: "${CLUSTER_NAME}-control-plane"
  
---
apiVersion: infrastructure.cluster.x-k8s.io/v1alpha4
kind: HostedCluster
metadata:
  name: "${CLUSTER_NAME}"
spec:
---
apiVersion: controlplane.cluster.x-k8s.io/v1alpha4
kind: HostedControlPlane
metadata:
  name: "${CLUSTER_NAME}-control-plane"
spec:
  kubeadmConfigSpec:
    initConfiguration:
      apiVersion: kubeadm.k8s.io/v1beta2
      kind: InitConfiguration
      bootstrapTokens:
      - groups:
        - system:bootstrappers:kubeadm:default-node-token
        token: abcdef.0123456789abcdef
        ttl: 24h0m0s
        usages:
        - signing
        - authentication
      localAPIEndpoint:
        advertiseAddress: "POD_IP"
        bindPort: 6443
      nodeRegistration:
        criSocket: /var/run/dockershim.sock
        name: kubernetes
        taints:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
    clusterConfiguration:
      apiVersion: kubeadm.k8s.io/v1beta2
      kind: ClusterConfiguration
      apiServer:
        timeoutForControlPlane: 4m0s
        certSANs:
        - "${CLUSTER_NAME}"
        - kubernetes
        - POD_IP
      certificatesDir: /etc/kubernetes/pki
      clusterName: "${CLUSTER_NAME}"
      controllerManager: {}
      etcd:
        local:
          dataDir: /var/lib/etcd
          serverCertSANs:
          - "${CLUSTER_NAME}"
          peerCertSANs:
          - "${CLUSTER_NAME}"
      imageRepository: k8s.gcr.io
      kubernetesVersion: v1.22.1
      networking:
        dnsDomain: cluster.local
      scheduler: {}
